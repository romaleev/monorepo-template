# Use official Node.js image
FROM node:20-alpine AS client

# Install pnpm globally
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# âœ… Copy the root package files first (to optimize Docker layer caching)
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

COPY client/package.json ./client/package.json

# âœ… Ensure dependencies are installed correctly, including workspace dependencies
RUN pnpm -F client --ignore-scripts --frozen-lockfile install

# Copy client code
COPY client/ ./client/

# Copy common code
COPY common/ ./common/

# Build
RUN pnpm -F client run build

# ðŸš€ Nginx Stage
FROM nginx:alpine
WORKDIR /usr/share/nginx/html
COPY common/docker/scripts/nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=client /app/client/dist/ /usr/share/nginx/html

# Expose port
EXPOSE 80